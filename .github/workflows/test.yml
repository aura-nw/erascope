name: Test

on:
  pull_request:
  workflow_call:

jobs:
  test:
    runs-on: [self-hosted]

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: phamphong9981
          POSTGRES_USER: phamphong
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

      aurad:
        image: auranw/local-aurad:latest
        ports:
          - 1317:1317
          - 26657:26657
          - 9090:9090

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.14'
          # registry-url: https://npm.pkg.github.com/aura-nw
      # - name: Install Yarn 2
      #   run: npm install -g yarn@berry

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup .yarnrc.yml
        run: |
          yarn config set npmScopes.aura-nw.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.aura-nw.npmAlwaysAuth true
          yarn config set npmScopes.aura-nw.npmAuthToken $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.KEY_NPM_RC }}
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list
      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install # will run `yarn install` command
        env:
          NODE_AUTH_TOKEN: ${{ secrets.KEY_NPM_RC }} # if needed

      # - name: Authenticate with private NPM package
      #   run: echo "//registry.npmjs.org/:_authToken=${{ secrets.KEY_NPM_RC }}" > ~/.npmrc
      # - name: Setup .yarnrc.yml
      #   run: |
      #     yarn -v
      #     yarn config set nodeLinker node-modules
      #     yarn config set npmScopes.aura-nw.npmRegistryServer "https://npm.pkg.github.com"
      #     yarn config set npmScopes.aura-nw.npmAlwaysAuth true
      #     yarn config set npmAuthToken $NODE_AUTH_TOKEN
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.KEY_NPM_RC }}
      # - name: Install dependencies
      #   run: yarn
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.KEY_NPM_RC }}
      - name: Migration
        env:
          NODE_ENV: test
          POSTGRES_PASSWORD: phamphong9981
          POSTGRES_USER: phamphong
          POSTGRES_DB_TEST: test
        uses: borales/actions-yarn@v4
        with:
          cmd: db:migrate:test:latest
      - name: Test
        uses: borales/actions-yarn@v4
        env:
          NODE_ENV: test
          POSTGRES_PASSWORD: phamphong9981
          POSTGRES_USER: phamphong
          POSTGRES_DB_TEST: test
        with:
          cmd: test

      # - name: Uninstall yarn
      #   run: npm uninstall -g yarn
